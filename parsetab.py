
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA F G GEQ LBRACKET LEQ LPAREN MINUS NORM NUMBER PLUS POWER PROP RBRACKET RPAREN UNDERSCORE\n    formula : expression\n    \n    expression : expression AND term\n               | term\n    \n    term : temporal_expression\n         | PROP\n    \n    temporal_expression : G LBRACKET NUMBER COMMA NUMBER RBRACKET LPAREN expression RPAREN\n                        | F LBRACKET NUMBER COMMA NUMBER RBRACKET LPAREN expression RPAREN\n    '
    
_lr_action_items = {'PROP':([0,8,20,21,],[5,5,5,5,]),'G':([0,8,20,21,],[6,6,6,6,]),'F':([0,8,20,21,],[7,7,7,7,]),'$end':([1,2,3,4,5,11,24,25,],[0,-1,-3,-4,-5,-2,-6,-7,]),'AND':([2,3,4,5,11,22,23,24,25,],[8,-3,-4,-5,-2,8,8,-6,-7,]),'RPAREN':([3,4,5,11,22,23,24,25,],[-3,-4,-5,-2,24,25,-6,-7,]),'LBRACKET':([6,7,],[9,10,]),'NUMBER':([9,10,14,15,],[12,13,16,17,]),'COMMA':([12,13,],[14,15,]),'RBRACKET':([16,17,],[18,19,]),'LPAREN':([18,19,],[20,21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'formula':([0,],[1,]),'expression':([0,20,21,],[2,22,23,]),'term':([0,8,20,21,],[3,11,3,3,]),'temporal_expression':([0,8,20,21,],[4,4,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> formula","S'",1,None,None,None),
  ('formula -> expression','formula',1,'p_formula','stl_parsing.py',50),
  ('expression -> expression AND term','expression',3,'p_expression','stl_parsing.py',56),
  ('expression -> term','expression',1,'p_expression','stl_parsing.py',57),
  ('term -> temporal_expression','term',1,'p_term','stl_parsing.py',70),
  ('term -> PROP','term',1,'p_term','stl_parsing.py',71),
  ('temporal_expression -> G LBRACKET NUMBER COMMA NUMBER RBRACKET LPAREN expression RPAREN','temporal_expression',9,'p_temporal_expression','stl_parsing.py',78),
  ('temporal_expression -> F LBRACKET NUMBER COMMA NUMBER RBRACKET LPAREN expression RPAREN','temporal_expression',9,'p_temporal_expression','stl_parsing.py',79),
]
